'''Upload documents on Github
git clone <nome>
<entra na pasta criada>
git add .
git commit -m "texto"
git push
git pull
'''

'''git checkout -b nome cria uma branch
git checkout nome entra na branch
git branch - verifica as branchs
git checkout master - entra na master
git merge origin "nome" 
git push origin master - subir commit
git branch -D "nome"- deletar branch
'''


Dados do projeto

proj            : PROJETO = Nome do Projeto
local           : LOCAL = Local da instação
tipo_ckt        : TIPO = Tipo de instalação
tens_va         : TENSÃO (VA) = tensão de operação
qt_ckt          : QUANT. = qt de ckt
power_va        : POTÊNCIA (VA) = potência do ckt
carga_total     : TOTAL (VA) = total da carga                   >>      (qt_ckt * power_va)
corr_total      : CORRENTE (VA) =  corrente total do ckt        >>      (carga_total / tens_va)
comp_ckt        : COMP. CKT = Comprimento do ckt
secao_conduto   : SEÇÃO CONDUTOR                                >>      Tabela de condutores
qd_tens_perm    : QUEDA TENSÃO PERMITIDA(%)
n_polos         : N DE POLOS
corr_nom        : CORRENTE NOMINAL                              >>      Disjuntor aplicável
dj              : DJ Usual	                                    >>      Disjuntor aplicável


(proj TEXT, local TEXT, tipo_ckt TEXT, tens_va INTEGER, qt_ckt INTEGER, power_va INTEGER, carga_total INTEGER, corr_total INTEGER, comp_ckt INTEGER, secao_conduto INTEGER, qd_tens_perm INTEGER, n_polos INTEGER, corr_nom INTEGER, dj TEXT)


(proj, local, tipo_ckt, tens_va, qt_ckt, power_va, carga_total, corr_total, comp_ckt, secao_conduto, qd_tens_perm, n_polos, corr_nom, dj)




def calc_cable(dist, corr,tens):

    x = str(tens)

    list_127 = f'''1.5 1.5 1.5	1.5	1.5	1.5	1.5	1.5	2.5	2.5	2.5	2.5	2.5
    1.5	1.5	1.5	1.5	1.5	1.5	1.5	1.5	4	4	4	6	6
    1.5	1.5	1.5	1.5	1.5	1.5	4	4	6	6	6	10	10
    1.5	1.5	1.5	1.5	1.5	2.5	2.5	4	4	4	6	10	10
    1.5	1.5	1.5	1.5	1.5	2.5	4	4	6	6	6	16	16
    1.5	1.5	1.5	4	4	6	6	10	10	10	10	16	25
    1.5	1.5	4	4	6	6	10	10	10	16	25	25  25
    1.5	2.5	4	6	4	6	10	10	16	16	16	35	35
    1.5	4	6	6	6	10	10	16	16	16	25	35	50
    2.5	4	6	10	6	10	10	16	16	25	25	50	50
    2.5	4	6	10	10	16	16	25	25	35	35	50	50
    2.5	6	10	10	10	16	16	25	25	25	35	70	70
    4	6	10	16	10	16	25	25	25	35	35	70	95
    4	10	10	16	10	16	25	25	35	35	50	95	95
    4	10	16	16	25	35	50	50	70	70	95	95	95
    6	10	16	16	25	50	50	70	70	95	95 95 120
    6	10	16	25	25	50	50	70	95	95	95	120	120
    6	16	25	25	35	50	70	95	95	120	120	150	150
    10	16	25	25	35	50	70	95	120	120	150	150	185
    10	16	25	25	50	70	95	95	120	150	150	185	240
    10	25	35	50	50	95	95	120	120	150	240	240	240'''

    list_220 = f'''1.5	1.5	1.5	1.5	1.5	1.5	1.5	1.5	1.5	1.5	1.5	1.5	1.5
    1.5	1.5	1.5	1.5	1.5	1.5	1.5	1.5	2.5	2.5	2.5	2.5	4
    1.5	1.5	1.5	1.5	1.5	1.5	2.5	2.5	2.5	4	4	4	6
    1.5	1.5	1.5	1.5	1.5	2.5	2.5	4	4	4	6	6	6
    1.5	1.5	1.5	1.5	1.5	2.5	4	4	6	6	6	10	10
    1.5	1.5	1.5	2.5	2.5	4	6	6	10	10	10	10	16
    1.5	1.5	2.5	2.5	4	6	6	10	10	10	16	16	16
    1.5	1.5	2.5	4	4	6	10	10	16	16	16	16	25
    1.5	2.5	2.5	4	6	10	10	16	16	16	25	25	25
    1.5	2.5	4	4	6	10	10	16	16	25	25	25	25
    1.5	2.5	4	6	6	16	16	16	25	25	25	25	35
    1.5	4	6	6	10	16	16	25	25	25	35	35	35
    2.5	4	6	10	10	16	25	25	25	35	35	50	50
    2.5	4	6	10	10	16	25	25	35	35	50	50	50
    2.5	6	10	10	16	25	25	35	50	50	50	70	70
    2.5	6	10	10	16	25	35	35	50	50	50	70	70
    4	6	10	16	16	25	35	35	50	50	70	70	70
    4	10	10	16	25	25	35	50	50	70	70	95	95
    4	10	16	16	25	35	50	50	70	70	95	95	95
    6	10	16	25	25	35	50	70	70	95	95	120	120
    6	16	25	25	35	50	70	70	95	95	120	150	150'''
 
    if int(x) == 127:
        desm = list_127.split('\n')
    else:
        desm = list_220.split('\n')

    x = []
    for a in desm:
        list_all = a.split()
        x.append(list_all)

    table_220 = pd.DataFrame(
                data=x,
                columns=['10','20','30','40','60','75','100','125','150','175','200','225','250'],
                index=['1.0','2.0','3.0','4.0','5.0','7.5','10.0','12.5','15.0','17.5','20.0','25.0','30.0','35.0','40.0','45.0','50.0','60.0','70.0','80.0','100.0']\
                )

    new_col = []
    for a in table_220.columns:
        new_col.append(int(a))

    new1 = []
    for a in new_col:
        if int(dist) > float(a):
            pass
        else:
            new1.append(a)

    dist = str(min(new1))

    y = []
    for a in table_220[dist].index:
        if float(a) > int(corr):
            y.append(float(a))

    return table_220[dist].loc[str(float(min(y)))]















def table_disj(power, tens):

    corr = [8,15,18,23,30,38,48,60,68,78,98,123,148,178,228]
    dj = [10,16,20,25,32,40,50,63,70,80,100,125,150,180,200,230]

    new = []
    for a in range(len(corr)):
        new.append([corr[a],dj[a]])
        
    table = pd.DataFrame(data=new,columns=['Corrente','DJ'])

    xx = str(tens)

    result = power / int(xx)
    res = round(result + 0.5)

    new2 = []
    for a in table['Corrente']:
        if res > int(a):
            pass
        else:
            new2.append(a)
            num = int(new2[0])

    new_table = table[table['Corrente'] == num]
    new = []

    for a in new_table['DJ']:
        return a
